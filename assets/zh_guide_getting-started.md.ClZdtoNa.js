import{_ as i,c as a,o as n,ah as t}from"./chunks/framework.QWunQcuv.js";const g=JSON.parse('{"title":"入门指南","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"zh/guide/getting-started.md","filePath":"zh/guide/getting-started.md"}'),e={name:"zh/guide/getting-started.md"};function l(p,s,h,k,d,r){return n(),a("div",null,s[0]||(s[0]=[t(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /mcp-kit/zh/guide/getting-started.md for this page in Markdown format</div><h1 id="入门指南" tabindex="-1">入门指南 <a class="header-anchor" href="#入门指南" aria-label="Permalink to “入门指南”">​</a></h1><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to “安装”">​</a></h2><h3 id="前提条件" tabindex="-1">前提条件 <a class="header-anchor" href="#前提条件" aria-label="Permalink to “前提条件”">​</a></h3><ul><li><a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js</a> 版本 18 或更高。</li><li>通过命令行界面（CLI）访问 MCP Kit 的终端。</li></ul><p>MCP Kit 可用于创建新的 MCP（模型上下文协议）应用程序。您可以使用以下任何包管理器安装和使用它：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-25" id="tab-26" checked><label data-title="npm" for="tab-26">npm</label><input type="radio" name="group-25" id="tab-27"><label data-title="pnpm" for="tab-27">pnpm</label><input type="radio" name="group-25" id="tab-28"><label data-title="yarn" for="tab-28">yarn</label><input type="radio" name="group-25" id="tab-29"><label data-title="bun" for="tab-29">bun</label><input type="radio" name="group-25" id="tab-30"><label data-title="deno" for="tab-30">deno</label></div><div class="blocks"><div class="language-sh active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp-kit@latest</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp-kit</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp-kit</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp-kit</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deno</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp-kit</span></span></code></pre></div></div></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>MCP Kit 是一个仅支持 ESM 的包。它需要 Node.js 版本 18 或更高，并使用现代 JavaScript 特性。</p></div><h2 id="设置向导" tabindex="-1">设置向导 <a class="header-anchor" href="#设置向导" aria-label="Permalink to “设置向导”">​</a></h2><p>当您运行创建命令时，MCP Kit 将启动一个交互式设置向导，引导您创建一个新项目：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">┌</span><span style="--shiki-light:#1b7c83;--shiki-light-font-weight:bold;--shiki-dark:#39c5cf;--shiki-dark-font-weight:bold;">  MCP Kit - The Modern Context Protocol Builder</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span></span>
<span class="line"><span style="--shiki-light:#28a745;--shiki-dark:#34d058;">◇</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">  Project type:</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span><span style="--shiki-light:#24292e80;--shiki-dark:#e1e4e880;">  MCP Server</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span></span>
<span class="line"><span style="--shiki-light:#28a745;--shiki-dark:#34d058;">◇</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">  Project name:</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span><span style="--shiki-light:#24292e80;--shiki-dark:#e1e4e880;">  mcp-server-starter</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span></span>
<span class="line"><span style="--shiki-light:#28a745;--shiki-dark:#34d058;">◇</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">  Project language:</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span><span style="--shiki-light:#24292e80;--shiki-dark:#e1e4e880;">  TypeScript</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span></span>
<span class="line"><span style="--shiki-light:#28a745;--shiki-dark:#34d058;">◇</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">  Project transport type:</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span><span style="--shiki-light:#24292e80;--shiki-dark:#e1e4e880;">  STDIO</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span></span>
<span class="line"><span style="--shiki-light:#28a745;--shiki-dark:#34d058;">◇</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">  Project template:</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span><span style="--shiki-light:#24292e80;--shiki-dark:#e1e4e880;">  Standard (recommended)</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span></span>
<span class="line"><span style="--shiki-light:#28a745;--shiki-dark:#34d058;">◇</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">  Do you want to install dependencies?</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span><span style="--shiki-light:#24292e80;--shiki-dark:#e1e4e880;">  Yes</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">│</span></span>
<span class="line"><span style="--shiki-light:#959da5;--shiki-dark:#959da5;">└</span><span style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;">  Project created successfully!</span></span></code></pre></div><ol><li><p>首先，系统会提示您选择 <strong>Project type</strong>:</p><ul><li><strong>MCP Server</strong>: 创建一个为 MCP 客户端提供工具、资源和提示的服务器</li><li><strong>MCP Client</strong>: 创建一个连接到 MCP 服务器的客户端</li></ul></li><li><p>接下来，系统会要求您提供<strong>Project name</strong> (默认为 <code>mcp-[type]-starter</code>)</p></li><li><p>选择您偏好的 <strong>Project language</strong>:</p><ul><li><strong>TypeScript</strong> (recommended)</li><li><strong>JavaScript</strong></li></ul></li><li><p>选择 <strong>Project transport type</strong> （可以选择多个选项）:</p><ul><li><strong>STDIO</strong>: 通过标准输入/输出流进行通信</li><li><strong>Streamable HTTP</strong>: 具有流式功能的 RESTful API</li><li><strong>SSE</strong>: 用于实时通信的服务器发送事件</li></ul></li><li><p>选择 <strong>Project template</strong>:</p><ul><li><strong>Standard</strong>: 包含推荐的插件和配置</li><li><strong>Custom</strong>: 允许您选择特定的插件</li></ul></li><li><p>如果您选择了 <strong>Custom</strong> 模板, 系统会提示您选择 <strong>Project plugins</strong>:</p><ul><li><strong>GitHub Action</strong>: CI/CD 工作流</li><li><strong>Vitest</strong>: 测试框架</li><li><strong>Inspector</strong>: 调试工具（仅限服务器项目）</li><li><strong>ESLint + Prettier + Lint-staged</strong>: 代码质量工具</li><li><strong>Commitlint</strong>: 提交消息检查</li><li><strong>Changelog</strong>: 自动生成变更日志</li></ul></li><li><p>最后，系统会询问您是否要自动 <strong>install dependencies</strong></p></li></ol><p>完成这些步骤后，MCP Kit 将使用所选配置创建您的项目。</p><h2 id="文件结构" tabindex="-1">文件结构 <a class="header-anchor" href="#文件结构" aria-label="Permalink to “文件结构”">​</a></h2><p>生成的文件结构取决于您选择的项目类型。</p><h3 id="mcp-服务器项目结构" tabindex="-1">MCP 服务器项目结构 <a class="header-anchor" href="#mcp-服务器项目结构" aria-label="Permalink to “MCP 服务器项目结构”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>├── src/</span></span>
<span class="line"><span>│   ├── tools/             # MCP 工具实现</span></span>
<span class="line"><span>│   │   ├── index.ts       # 工具注册</span></span>
<span class="line"><span>│   │   └── register*.ts   # 单个工具实现</span></span>
<span class="line"><span>│   ├── resources/         # MCP 资源实现</span></span>
<span class="line"><span>│   │   └── index.ts       # 资源注册</span></span>
<span class="line"><span>│   ├── prompts/           # MCP 提示实现</span></span>
<span class="line"><span>│   │   └── index.ts       # 提示注册</span></span>
<span class="line"><span>│   ├── services/          # 服务器实现</span></span>
<span class="line"><span>│   │   ├── stdio.ts       # STDIO 传输实现</span></span>
<span class="line"><span>│   │   └── web.ts         # 可流式 HTTP 和 SSE 传输实现</span></span>
<span class="line"><span>│   └── index.ts           # 入口点</span></span>
<span class="line"><span>├── tests/                 # 测试文件（可选）</span></span>
<span class="line"><span>├── scripts/               # 构建和开发脚本</span></span>
<span class="line"><span>├── .github/               # GitHub Actions 工作流（可选）</span></span>
<span class="line"><span>├── .husky/                # Git 钩子（可选）</span></span>
<span class="line"><span>├── .prettierrc            # Prettier 配置（可选）</span></span>
<span class="line"><span>├── changelog-option.js    # 约定式变更日志配置（可选）</span></span>
<span class="line"><span>├── commitlint.config.js   # 提交消息检查规则（可选）</span></span>
<span class="line"><span>├── eslint.config.js       # ESLint 配置（可选）</span></span>
<span class="line"><span>├── lint-staged.config.js  # Lint-staged 配置（可选）</span></span>
<span class="line"><span>├── vitest.*.ts            # Vitest 配置（可选）</span></span>
<span class="line"><span>└── package.json</span></span></code></pre></div><h3 id="mcp-客户端项目结构" tabindex="-1">MCP 客户端项目结构 <a class="header-anchor" href="#mcp-客户端项目结构" aria-label="Permalink to “MCP 客户端项目结构”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>├── src/</span></span>
<span class="line"><span>│   └── index.ts           # 带有传输实现的入口点</span></span>
<span class="line"><span>├── tests/                 # 测试文件（可选）</span></span>
<span class="line"><span>├── scripts/               # 构建和开发脚本</span></span>
<span class="line"><span>├── .github/               # GitHub Actions 工作流（可选）</span></span>
<span class="line"><span>├── .husky/                # Git 钩子（可选）</span></span>
<span class="line"><span>├── .prettierrc            # Prettier 配置（可选）</span></span>
<span class="line"><span>├── changelog-option.js    # 约定式变更日志配置（可选）</span></span>
<span class="line"><span>├── commitlint.config.js   # 提交消息检查规则（可选）</span></span>
<span class="line"><span>├── eslint.config.js       # ESLint 配置（可选）</span></span>
<span class="line"><span>├── lint-staged.config.js  # Lint-staged 配置（可选）</span></span>
<span class="line"><span>├── vitest.*.ts            # Vitest 配置（可选）</span></span>
<span class="line"><span>└── package.json</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>项目结构设计为模块化和可扩展的。您可以根据自己的需求进行自定义。</p></div><h2 id="启动和运行" tabindex="-1">启动和运行 <a class="header-anchor" href="#启动和运行" aria-label="Permalink to “启动和运行”">​</a></h2><p>创建项目后，您可以使用以下 npm 脚本来开发、测试和构建您的应用程序：</p><h3 id="mcp-服务器开发脚本" tabindex="-1">MCP 服务器开发脚本 <a class="header-anchor" href="#mcp-服务器开发脚本" aria-label="Permalink to “MCP 服务器开发脚本”">​</a></h3><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="package.json">package.json</span></div><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;以 stdio 模式启动开发服务器&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dev:web&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;以 web 模式启动开发服务器&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;构建项目&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;运行测试（如果选择了 vitest 插件）&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;coverage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;生成测试覆盖率报告（如果选择了 vitest 插件）&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;lint&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;运行代码检查（如果选择了 style 插件）&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><p>要启动开发服务器，请运行：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-201" id="tab-202" checked><label data-title="npm" for="tab-202">npm</label><input type="radio" name="group-201" id="tab-203"><label data-title="pnpm" for="tab-203">pnpm</label><input type="radio" name="group-201" id="tab-204"><label data-title="yarn" for="tab-204">yarn</label></div><div class="blocks"><div class="language-sh active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div></div></div><h3 id="mcp-客户端开发脚本" tabindex="-1">MCP 客户端开发脚本 <a class="header-anchor" href="#mcp-客户端开发脚本" aria-label="Permalink to “MCP 客户端开发脚本”">​</a></h3><p>客户端项目包含类似的脚本，用于开发、测试和构建：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="package.json">package.json</span></div><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;以开发模式启动客户端&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;构建项目&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;运行测试（如果选择了 vitest 插件）&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;coverage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;生成测试覆盖率报告（如果选择了 vitest 插件）&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;lint&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;运行代码检查（如果选择了 style 插件）&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div>`,29)]))}const c=i(e,[["render",l]]);export{g as __pageData,c as default};
