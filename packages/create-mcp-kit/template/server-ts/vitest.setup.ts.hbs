{{#if (includes plugins 'vitest')}}
import 'dotenv/config'
import { Client } from '@modelcontextprotocol/sdk/client/index.js'
  {{#if (includes transports 'stdio')}}
import { StdioClientTransport } from '@modelcontextprotocol/sdk/client/stdio.js'
  {{/if}}
  {{#if (includes transports 'streamable')}}
import { StreamableHTTPClientTransport } from '@modelcontextprotocol/sdk/client/streamableHttp.js'
  {{/if}}
  {{#if (includes transports 'sse')}}
import { SSEClientTransport } from '@modelcontextprotocol/sdk/client/sse.js'
  {{/if}}

const client = new Client({
  name: 'test-mcp-client',
  version: '1.0.0',
})

  {{#if (includes transports 'stdio')}}
const stdioClientTransport = new StdioClientTransport({
  command: 'c8',
  args: ['--reporter=lcov', '--reporter=text', 'tsx', './src/index.ts'],
  env: {
    ...(process.env as Record<string, string>),
    NODE_V8_COVERAGE: './coverage/tmp',
  },
})
await client.connect(stdioClientTransport)

  {{/if}}
  {{#if (includes transports 'streamable')}}
const streamableBaseUrl = new URL('http://localhost:8401/mcp')
const streamableClientTransport = new StreamableHTTPClientTransport(new URL(streamableBaseUrl))
await client.connect(streamableClientTransport)

  {{/if}}
  {{#if (includes transports 'sse')}}
const sseBaseUrl = new URL('http://localhost:8401/sse')
const sseClientTransport = new SSEClientTransport(new URL(sseBaseUrl))
await client.connect(sseClientTransport)

  {{/if}}
global.client = client
{{/if}}
